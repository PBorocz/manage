[tool.poetry]
name = "manage"
version = "0.3.4"
description = "'Manage' environment for poetry-based projects (at least mine)"
authors = ["Peter Borocz <peter.borocz+manage@google.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "manage"}]

[tool.poetry.scripts]
manage = "manage.cli:main"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
pydantic = "^2.5.3"
python-dotenv = "^1.0.0"
pyyaml = "^6.0"
requests = "^2.31.0"
rich = "^13.2.0"

[tool.poetry.group.dev.dependencies]
pysnooper = "^1.1.1"
pytest = "^7.2.1"
pytest-git = "^1.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ##############################################################################
# PoeThePoet
# ##############################################################################
[tool.poe]
verbosity = 2

[tool.poe.executor]
type = "virtualenv"

[tool.poe.tasks]
test = "pytest"
run = "poetry run manage"

# Version update (aka "bump")
poetry_version = "poetry version" # Meant to be followed by bump_level if not patch.
git_add_pyproject_toml = "git add pyproject.toml"
#git_commit = "git commit -m '$(date '+%Y-%m-%dT%H:%M:%S')'"
git_commit = "git commit -m 'Bump step commit from poe.'"
bump = ["poetry_version", "git_add_pyproject_toml", "git_commit"]

# [tool.poe.tasks.poetry_version]
# cmd = "poetry version "
# args = ["bump_level"]

# [tool.poe.tasks.git_commit]
# cmd = "git commit -m "
# args = ["bump_level"]


# ##############################################################################
# Manager Tool
# ##############################################################################
[tool.manage]

# ------------------------------------------------------------------------------
[tool.manage.recipes."1_bump"]
description = "Bump the version number to the next /patch/ level and commit locally"

[[tool.manage.recipes."1_bump".steps]]
  method = "poetry_version"
  arguments = { bump_rule = "patch" }

[[tool.manage.recipes."1_bump".steps]]
  method = "poetry_version_sync"
  arguments = {init_path = "manage/__init__.py" }

[[tool.manage.recipes."1_bump".steps]]
  method = "update_readme"

[[tool.manage.recipes."1_bump".steps]]
  method = "git_add"
  arguments = { pathspec = "README.md pyproject.toml manage/__init__.py" }

[[tool.manage.recipes."1_bump".steps]]
  method = "git_commit"


# ------------------------------------------------------------------------------
[tool.manage.recipes."2_build"]
description = "Build our distribution(s)"

[[tool.manage.recipes."2_build".steps]]
  method = "poetry_lock_check"

[[tool.manage.recipes."2_build".steps]]
  method = "clean"
  verbose = true

[[tool.manage.recipes."2_build".steps]]
  method = "poetry_build"

# ------------------------------------------------------------------------------
[tool.manage.recipes."3_release"]
description = "Release current version's distribution to our github repository"

[[tool.manage.recipes."3_release".steps]]
  method = "git_create_tag"

[[tool.manage.recipes."3_release".steps]]
  method = "git_push_to_github"

[[tool.manage.recipes."3_release".steps]]
  method = "git_create_release"

# ------------------------------------------------------------------------------
[tool.manage.recipes.ALL]
description = "Bump to next version, build *and* release!"

[[tool.manage.recipes.ALL.steps]]
  recipe = "1_bump"

[[tool.manage.recipes.ALL.steps]]
  recipe = "2_build"

[[tool.manage.recipes.ALL.steps]]
  recipe = "3_release"

[tool.poetry]
name = "manage"
version = "0.3.5"
description = "'Manage' environment for poetry-based projects (at least mine)"
authors = ["Peter Borocz <peter.borocz+manage@google.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "manage"}]

[tool.poetry.scripts]
manage = "manage.cli:main"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
pydantic = "^2.5.3"
python-dotenv = "^1.0.0"
pyyaml = "^6.0"
requests = "^2.31.0"
rich = "^13.2.0"

[tool.poetry.group.dev.dependencies]
pysnooper = "^1.1.1"
pytest = "^7.2.1"
pytest-git = "^1.7.0"

# Automatically keeps manage/__init__.py in sync with pyproject.toml!
[tool.poetry_bumpversion.file."manage/__init__.py"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ##############################################################################
# PoeThePoet
# ##############################################################################
[tool.poe]
verbosity = 2

[tool.poe.tasks]
#-------------------------------------------------------------------------------
# 0: GENERAL Task
#-------------------------------------------------------------------------------
test = "pytest"
run = "poetry run manage"

#-------------------------------------------------------------------------------
# 1: Version update (aka "bump")
#-------------------------------------------------------------------------------
# Still need:
# - (?) ability to do other than "patch" bump_level.
VERSION = [
  "_poetry_version",
  "_update_readme_version",
  "_git_add_version",
  "_git_commit",
]
_update_readme_version = "update_readme_version" # Uses pyproject.toml to update README.md
_git_add_version	   = "git add pyproject.toml manage/__init__.py README.md"
_git_commit			   = "git commit -m 'Bump step commit (from poe)'"

#-------------------------------------------------------------------------------
# 2: Build
#-------------------------------------------------------------------------------
BUILD = [
  "_clean",
  "_poetry_lock_check",
  "_poetry_lock_update",
  "_poetry_build",
]
_clean				= "rm -rf build *.egg-info"
_poetry_lock_check	= "poetry lock --check"
_poetry_lock_update	= "poetry lock --no-update"
_poetry_build		= "poetry build"

#-------------------------------------------------------------------------------
# 3: Release
#-------------------------------------------------------------------------------
RELEASE	= [
  "_git_create_tag",
  "_git_push_to_github",
  "_git_create_release",
]
_git_push_to_github	= "git push --follow-tags"

#-------------------------------------------------------------------------------
# Support targets.
#-------------------------------------------------------------------------------
[tool.poe.tasks._poetry_version]
shell = "poetry version $bump_level"

[[tool.poe.tasks._poetry_version.args]]
  name    = "bump_level"
  help    = "The semantic version to push new version to, eg. patch, minor, major etc."
  default = "patch"

[tool.poe.tasks._git_create_tag]
interpreter = "fish"
shell = """
  set version (grep "version =" pyproject.toml | head -1 | awk -F'\"' '{print $2}')
  git tag -a $version --message $version
"""

[tool.poe.tasks._git_create_release]
interpreter = "fish"
shell = """
  set version (grep "version =" pyproject.toml | head -1 | awk -F'\"' '{print $2}')
  gh release create "$version" --title "$version"
"""

# ##############################################################################
# Manager Tool
# ##############################################################################
# [tool.manage]

# ------------------------------------------------------------------------------
# [tool.manage.recipes."1_bump"]
# description = "Bump the version number to the next /patch/ level and commit locally"

# [[tool.manage.recipes."1_bump".steps]]
#   method = "poetry_version"
#   arguments = { bump_rule = "patch" }

# [[tool.manage.recipes."1_bump".steps]]
#   method = "poetry_version_sync"
#   arguments = {init_path = "manage/__init__.py" }

# [[tool.manage.recipes."1_bump".steps]]
#   method = "update_readme"

# [[tool.manage.recipes."1_bump".steps]]
#   method = "git_add"
#   arguments = { pathspec = "README.md pyproject.toml manage/__init__.py" }

# [[tool.manage.recipes."1_bump".steps]]
#   method = "git_commit"

# ------------------------------------------------------------------------------
# [tool.manage.recipes."2_build"]
# description = "Build our distribution(s)"

# [[tool.manage.recipes."2_build".steps]]
#   method = "poetry_lock_check"

# [[tool.manage.recipes."2_build".steps]]
#   method = "clean"
#   verbose = true

# [[tool.manage.recipes."2_build".steps]]
#   method = "poetry_build"

# ------------------------------------------------------------------------------
# [tool.manage.recipes."3_release"]
# description = "Release current version's distribution to our github repository"

# [[tool.manage.recipes."3_release".steps]]
#   method = "git_create_tag"

# [[tool.manage.recipes."3_release".steps]]
#   method = "git_push_to_github"

# [[tool.manage.recipes."3_release".steps]]
#   method = "git_create_release"
